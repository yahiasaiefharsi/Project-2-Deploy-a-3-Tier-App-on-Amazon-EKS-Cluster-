name: CI/CD - Voting App (EKS)

on:
  push:
    branches: [ "main" ]
    paths:
      - "vote/**"
      - "result/**"
      - "worker/**"
      - "k8s/**"
      - ".github/workflows/**"
  workflow_dispatch: {}

concurrency:
  group: voting-app-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ vote, result, worker ]   # build all three each run
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}                 # e.g. af-south-1
      EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}     # e.g. saief-voting-prod
      KUBE_NAMESPACE: voting-prod
      REGISTRY: docker.io
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }} # e.g. saief057
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compose image name
        id: img
        run: echo "IMAGE=${{ env.REGISTRY }}/${{ env.DOCKERHUB_USERNAME }}/${{ matrix.service }}:${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push ${{ matrix.service }}
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service }}
          push: true
          tags: |
            ${{ steps.img.outputs.IMAGE }}
            ${{ env.REGISTRY }}/${{ env.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # ---- Deploy to EKS ----
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.29.0

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name "$EKS_CLUSTER_NAME" --region "$AWS_REGION"

      - name: Ensure namespace exists
        run: kubectl get ns "$KUBE_NAMESPACE" || kubectl create namespace "$KUBE_NAMESPACE"

      - name: Apply baseline manifests (idempotent)
        run: kubectl apply -n "$KUBE_NAMESPACE" -f k8s/

      - name: Set image on deployment
        run: |
          DEPLOY="${{ matrix.service }}"
          CONTAINER="${{ matrix.service }}"
          IMAGE="${{ steps.img.outputs.IMAGE }}"
          kubectl -n "$KUBE_NAMESPACE" set image deployment/$DEPLOY $CONTAINER=$IMAGE --record

      - name: Wait for rollout
        run: kubectl -n "$KUBE_NAMESPACE" rollout status deployment/${{ matrix.service }} --timeout=300s
